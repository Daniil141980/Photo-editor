spring:
  datasource:
    url: 'jdbc:postgresql://localhost:15432/images_db'
    username: user
    password: password
    driver-class-name: org.postgresql.Driver
  servlet:
    multipart:
      max-file-size: 10MB
      max-request-size: 10MB
  liquibase:
    change-log: classpath:db/changelog/main-changelog.yaml
  mvc:
    servlet:
      path: /api/v1
  kafka:
    listener.ack-mode: manual
    bootstrap-servers:
      - localhost:9092
      - localhost:9093
      - localhost:9094
    properties:
      security.protocol: SASL_PLAINTEXT
      sasl.mechanism: PLAIN
      sasl.jaas.config: org.apache.kafka.common.security.plain.PlainLoginModule required username="admin" password="admin-secret";
  docker:
    compose:
      enabled: false
storage:
  url: http://localhost:9002
  port: 9002
  accessKey: user
  secretKey: password
  secure: false
  bucket: minio-storage
  image-size: 10485760 #10 Mb

jwt:
  secret: 77397A24432646294A404E635266556A586E3272357538782F4125442A472D4B
  issuer: daniil

app:
  images:
    wip:
      topic: images.wip
      partitions: 3
      replicas: 3
    done:
      topic: images.done
      partitions: 2
      replicas: 3
      group-id: group.images.done

management:
  endpoints:
    web:
      exposure:
        include: prometheus, metrics, info, health, shutdown, beans
      base-path:  /actuator
      path-mapping:
        prometheus: /metrics
  endpoint:
    health:
      show-details: always
      show-components: always
      probes:
        enabled: true
    shutdown:
      enabled: true
  health:
    db:
      enabled: true
    livenessstate:
      enabled: true
  metrics:
    tags:
      application: ${spring.application.name}
    distribution:
      percentiles-histogram:
        "[http.server.requests]": true
  prometheus:
    metrics:
      export:
        enabled: true