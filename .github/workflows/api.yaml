name: Api Build
on:
  pull_request:
    paths:
      - .github/workflows/api.yaml
      - api/**
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup java
        uses: actions/setup-java@v4
        with:
          java-version: 21
          distribution: temurin
          cache: maven
      - name: maven build
        run: mvn -pl api -am clean compile
  checkstyle:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup java
        uses: actions/setup-java@v4
        with:
          java-version: 21
          distribution: temurin
          cache: maven
      - run: mvn -pl api -am checkstyle:check
  unit-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup java
        uses: actions/setup-java@v4
        with:
          java-version: 21
          distribution: temurin
          cache: maven
      - name: Execute Maven Test
        run: mvn -pl api -am clean package
      - name: Add coverage to PR
        id: jacoco
        uses: madrapps/jacoco-report@v1.6.1
        with:
          paths: ${{ github.workspace }}/api/target/site/jacoco/jacoco.xml
          token: ${{ secrets.GITHUB_TOKEN }}
          min-coverage-overall: 50
          min-coverage-changed-files: 50
          update-comment: true
          title: "Jacoco Report"
  deploy:
    runs-on: ubuntu-latest
    needs: [ build, checkstyle, openapi-diff, unit-tests ]
    steps:
      - uses: actions/checkout@v4
      - name: Get the version
        id: vars
        run: echo ::set-output name=tag::$(echo ${GITHUB_SHA:10})
      - name: Docker login
        working-directory: ./api
        env:
          DOCKER_USERNAME: ${{secrets.dockerhub_username}}
          DOCKER_PASSWORD: ${{secrets.dockerhub_password}}
        run: docker login -u="$DOCKER_USERNAME" -p="$DOCKER_PASSWORD" docker.io
      - name: Build the Docker image
        working-directory: ./api
        run: docker build . --file Dockerfile --tag ${{secrets.dockerhub_username}}/${{secrets.dockerhub_repo_name}}:${{steps.vars.outputs.tag}}
      - name: Publish dockerimage to docker hub
        working-directory: ./api
        run: docker push ${{secrets.dockerhub_username}}/${{secrets.dockerhub_repo_name}}:${{steps.vars.outputs.tag}}
      - name: Build Docker image with latest tag
        working-directory: ./api
        run: docker build . --file Dockerfile --tag ${{secrets.dockerhub_username}}/${{secrets.dockerhub_repo_name}}:latest
      - name: Publish dockerimage to docker hub
        working-directory: ./api
        run: docker push ${{secrets.dockerhub_username}}/${{secrets.dockerhub_repo_name}}:latest